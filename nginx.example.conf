
daemon off;
worker_processes  auto;
error_log /dev/stdout info;
user root;


pid        tmp/nginx.pid;


events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    lua_shared_dict auto_ssl 1m;
    resolver 8.8.8.8;

    init_by_lua_block {
      auto_ssl = (require "resty.auto-ssl").new()

      -- Define a function to determine which SNI domains to automatically handle
      -- and register new certificates for. Defaults to not allowing any domains,
      -- so this must be configured.
      auto_ssl:set("allow_domain", function(domain)
        return true
      end)

      auto_ssl:init()
    }

    init_worker_by_lua_block {
      auto_ssl:init_worker()
    }


    server {
        listen       443 ssl;
        server_name  localhost;
        ssl_certificate_by_lua_block {
          auto_ssl:ssl_certificate()
        }

        ssl_certificate /etc/ssl/resty-auto-ssl-fallback.crt;
        ssl_certificate_key /etc/ssl/resty-auto-ssl-fallback.key;


        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

    server {
      listen 80;

      # Endpoint used for performing domain verification with Let's Encrypt.
      location /.well-known/acme-challenge/ {
        content_by_lua_block {
          auto_ssl:challenge_server()
        }
      }
    }

    # Internal server running on port 8999 for handling certificate tasks.
    server {
      listen 127.0.0.1:8999;
      location / {
        content_by_lua_block {
          auto_ssl:hook_server()
        }
      }
    }
}
